jobs:
######################### Create release  ##########################
- name: some-job
  plan:
  - get: repository
  - task: windowstry
    file: repository/Pipeline/windows.yml

- name: wincrement-version
  public: true
  plan: 
  - get: version
    params: {bump: minor}
  - get: repository
    trigger: true
  - put: version
    params: {file: version/version}

- name: create-release-image
  public: true
  plan:
  - get: repository
    passed: [wincrement-version]
  - get: version
    passed: [wincrement-version]
  - put: release-docker-image
    params:
      build: repository
      tag: version/version
      tag_as_latest: true

- name: static-analysis
  public: true
  plan:
  - get: repository
    passed: [wincrement-version]
  - get: version
    passed: [wincrement-version]
  - task: not-implemented
    file: repository/documentation/copy-repository.yml


###################### Kubernetes deployment ########################

- name: kubernetes-deploy-staging
  public: true
  plan:
  - get: repository
  - get: version
    passed: [create-release-image]
  - get: release-docker-image
    passed: [create-release-image]
    trigger: true
  - task: generate-kubernetes-yml
    file: repository/concourse-pipeline/deploy-kubernetes/generate.yml
  - put: kubernetes-job
    params:
      repository: kubernetes-yml
      resource_path: kubernetes-yml/test-svc.yml
      image_name: repository/concourse-pipeline/deploy-kubernetes/kubernetes-docker-repo
      image_tag: version/number
  - put: kubernetes-job
    params:
      repository: kubernetes-yml
      resource_path: kubernetes-yml/test-ing.yml
      image_name: repository/concourse-pipeline/deploy-kubernetes/kubernetes-docker-repo
      image_tag: version/number
  - put: kubernetes-job
    params:
      repository: kubernetes-yml
      resource_path: kubernetes-yml/test-deploy.yml
      image_name: repository/concourse-pipeline/deploy-kubernetes/kubernetes-docker-repo
      image_tag: version/number

- name: end-to-end-test
  public: true
  plan:
  - get: repository
    passed: [kubernetes-deploy-staging]
  - get: version
    passed: [kubernetes-deploy-staging]
    trigger: true
  - task: test
    file: repository/concourse-pipeline/end-to-end-test/test.yml
  - task: generate-kubernetes-yml
    file: repository/deploy-kubernetes/generate.yml
  - put: kubernetes-delete
    params:
      repository: kubernetes-yml
      resource_path: kubernetes-yml/test-svc.yml
      image_name: repository/deploy-kubernetes/kubernetes-docker-repo
      image_tag: version/number
  - put: kubernetes-delete
    params:
      repository: kubernetes-yml
      resource_path: kubernetes-yml/test-ing.yml
      image_name: repository/deploy-kubernetes/kubernetes-docker-repo
      image_tag: version/number
  - put: kubernetes-delete
    params:
      repository: kubernetes-yml
      resource_path: kubernetes-yml/test-deploy.yml
      image_name: repository/deploy-kubernetes/kubernetes-docker-repo
      image_tag: version/number

####################################################################

- name: mark-as-stable
  public: true
  plan:
  - get: repository
    passed: [end-to-end-test, static-analysis]
  - get: version
    passed: [end-to-end-test, static-analysis]
  - put: repository
    params:
      repository: repository
      tag: version/version
      only_tag: true
      tag_prefix: stable_ 
  - put: stable-repository
    params: 
      repository: repository
      tag: version/version
      tag_prefix: stable_

- name: create-documentation
  public: true
  plan: 
  - get: repository
    passed: [mark-as-stable]
  - get: version
    passed: [mark-as-stable]
  - task: copy-repository
    file: repository/documentation/copy-repository.yml
  - put: documentation-container
    params: 
      build: documentation
      tag: version/version
      tag_as_latest: true

- name: pac-release-notes
  public: true
  plan:
  - get: repository
#    passed: [mark-as-stable]
  - get: version
    passed: [wincrement-version]
    trigger: true
  - task: create-release-notes
    file: repository/concourse-pipeline/pac-release-notes/create-release-notes.yml
  - put: release-notes
    params: 
      build: release-notes
      tag: version/version
      tag_as_latest: true

####################################################################

- name: kubernetes-serve-documentation
  public: true
  plan:
  - get: repository
 #   passed: [create-documentation]
  - get: version
    passed: [create-documentation]
  - get: documentation-container
    passed: [create-documentation]
    trigger: true
  - task: generate-kubernetes-yml
    file: repository/concourse-pipeline/pac-release-notes/generate.yml
  - put: kubernetes-job
    params:
      repository: kubernetes-yml
      resource_path: kubernetes-yml/test-deploy.yml
      image_name: repository/deploy-kubernetes/kubernetes-docker-repo
      image_tag: version/number

- name: kubernetes-serve-release-notes
  public: true
  plan:
  - get: repository
#    passed: [pac-release-notes]
  - get: version
    passed: [pac-release-notes]
  - get: release-notes
    passed: [pac-release-notes]
  - task: generate-kubernetes-yml
    file: repository/concourse-pipeline/pac-release-notes/generate.yml
  - put: kubernetes-job
    params:
      repository: kubernetes-yml
      resource_path: kubernetes-yml/test-svc.yml
      image_name: repository/deploy-kubernetes/kubernetes-docker-repo
      image_tag: version/number

- name: kubernetes-deploy-production
  public: true
  plan:
  - get: repository
    passed: [kubernetes-serve-release-notes, kubernetes-serve-documentation]
  - get: version
    passed: [kubernetes-serve-release-notes, kubernetes-serve-documentation]
  - task: generate-kubernetes-yml
    file: repository/concourse-pipeline/pac-release-notes/generate.yml
  - put: kubernetes-job
    params:
      repository: repository
      resource_path: kubernetes-yml/test-svc.yml
      image_name: repository/deploy-kubernetes/kubernetes-docker-repo
      image_tag: version/number

- name: mark-as-release
  public: true
  plan:
  - get: repository
    passed: [kubernetes-deploy-production]
  - get: version
    passed: [kubernetes-deploy-production]
  - put: repository
    params:
      repository: repository
      tag: version/version
      only_tag: true
      tag_prefix: release_
#  - put: stable-repository
#    params:
#      repository: repository
#      tag: version/version
#      only_tag: true
#      tag_prefix: release_
  - put: release-repository
    params:
      repository: repository
      tag: version/version
      tag_prefix: release_

###################### Additional Resource Types ###################

resource_types:
- name: kubernetes
  type: docker-image
  source:
    repository: sharor/concourse-kubernetes-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
####################### Create release #############################
resources:
- name: slack-alert
  type: slack-notification
  source: 
    url: {{slack-hook}}


- name: repository
  type: git
  source:
    uri: https://github.com/Sharor/concourse-playtime.git
    branch: master
    username: {{github-username}}
    password: {{github-password}}

- name: version
  type: semver
  source:
    driver: git
    initial_version: 0.0.0
    uri: git@github.com:Sharor/concourse-playtime.git
    branch: version
    file: version
    private_key: {{concourse-token}}

- name: release-docker-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: {{docker-hub-image-hello-world}}

####################################################################



- name: stable-repository
  type: git
  source:
    uri: https://github.com/Sharor/concourse-playtime.git
    branch: stable
    username: {{github-username}}
    password: {{github-password}}

- name: release-repository
  type: git
  source:
    uri: https://github.com/Sharor/concourse-playtime.git
    branch: release
    username: {{github-username}}
    password: {{github-password}}


- name: documentation-container
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: {{docker-documentation-image}}

- name: release-notes
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: {{docker-release-notes-image}}

#- name: kubernetes
#  type: kubernetes
#  source:
#    cluster_url: https://192.168.99.100:8443
#    namespace: default
#    cluster_ca: {{cluster-ca}}
#    admin_key: {{admin-key}}
#    admin_cert: {{admin-cert}}
#    resource_type: deployment
#    resource_name: test

############ Kubernetes deployment and deletion ####################

- name: kubernetes-job
  type: kubernetes
  source:
    cluster_url: https://192.168.99.100:8443
    namespace: default
    cluster_ca: {{cluster-ca}}
    admin_key: {{admin-key}}
    admin_cert: {{admin-cert}}
    resource_type: job
    resource_name: test


- name: kubernetes-delete
  type: kubernetes
  source:
    cluster_url: https://192.168.99.100:8443
    namespace: default
    cluster_ca: {{cluster-ca}}
    admin_key: {{admin-key}}
    admin_cert: {{admin-cert}}
    resource_type: delete
    resource_name: test


